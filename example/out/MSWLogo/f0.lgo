;Code generated for MSWLogo

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Basic Functions                                                       ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to dot_product :ux :uy :vx :vy
    output arccos (:ux*:vx+:uy*:vy)/((sqrt :ux*:ux+:uy*:uy)*(sqrt :vx*:vx+:vy*:vy))
end


;draws a cubic bezier curve from current point to (x, y)
;@param x1, y1 are the first control point
;@param x2, y2 are the second control point
;@param n is the number of points
to cubic_bezier :x1 :y1 :x2 :y2 :x :y :n

    make "dt (1.0/(:n-1))

    for [i 0 :n 1] [
        make "t :i*:dt

        ;calculating coefficients
        make "cx 3.0*(:x1-(first pos))
        make "bx 3.0*(:x2-:x1)-:cx
        make "ax :x-(first pos)-:cx-:bx

        make "cy 3.0*(:y1-(last pos))
        make "by 3.0*(:y2-:y1)-:cy
        make "ay :y-(last pos)-:cy-:by

        make "rx :ax*:t*:t*:t+:bx*:t*:t+:cx*:t+(first pos)
        make "ry :ay*:t*:t*:t+:by*:t*:t+:cy*:t+(last pos)

        ;goto new point
        setxy :rx :ry

        ;save the second control point
        make "lx1 :x2
        make "ly1 :y2
    ]
end


;draws an arc
;@param (cx, cy) is the center
;@param rx radius x
;@param ry radius y
;@param rt is the angle from the x-axis of the current coordinate system to the x-axis of the ellipse
;@param o which is the start angle of the elliptical arc prior to the stretch and rotate operations
;@param do is the difference between the initial and final angle
;see also http://www.w3.org/TR/SVG/implnote.html#ArcParameterizationAlternatives
to draw_arc :cx :cy :rx :ry :rt :o :do

    ;make angle positive and less or equal than 360
    make "o (remainder (int :o) 360)

    if :o<0 [
        make "o :o+360
    ]

    ;set turning sense
    ifelse :do<0 [
        make "i -1
    ] [
        make "i 1
    ]

    ;draw arc
    for [a :o :o+:do :i] [
        ;calculate point
        make "px (cos :rt)*:rx*(cos :a)-(sin :rt)*:ry*(sin :a)+:cx
        make "py (sin :rt)*:rx*(cos :a)+(cos :rt)*:ry*(sin :a)+:cy

        ;goto the point
        setxy :px :py
    ]

end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;SVG Functions                                                         ;
;http://www.w3.org/TR/SVG/paths.html                                   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to absolute_moveto :x :y
  penup
  setxy :x :y
  pendown
  make "x0 (first pos)
  make "y0 (last pos)
end


to relative_moveto :x :y
  absolute_moveto :x+(first pos) :y+(last pos)
end


to closepath
  setxy :x0 :y0
end


to absolute_horizontal_lineto :x
  setx :x
end


to relative_horizontal_lineto :x
  absolute_horizontal_lineto :x+(first pos)
end


to absolute_vertical_lineto :y
  sety :y
end


to relative_vertical_lineto :y
  absolute_vertical_lineto :y+(last pos)
end


to absolute_lineto :x :y
  setxy :x :y
end


to relative_lineto :x :y
  absolute_lineto :x+(first pos) :y+(last pos)
end


to absolute_cubic_bezier :x1 :y1 :x2 :y2 :x :y
    ;n=1000 to ensure that the curve is smooth
    cubic_bezier :x1 :y1 :x2 :y2 :x :y 1000
end


to relative_cubic_bezier :x1 :y1 :x2 :y2 :x :y
    absolute_cubic_bezier :x1+(first pos) :y1+(last pos) :x2+(first pos) :y2+(last pos) :x+(first pos) :y+(last pos)
end


to absolute_smooth_cubic_bezier :x2 :y2 :x :y
    absolute_cubic_bezier (2*(first pos)-(:lx1)) (2*(last pos)-(:ly1)) :x2 :y2 :x :y
end


to relative_smooth_cubic_bezier :x2 :y2 :x :y
    absolute_cubic_bezier (2*(first pos)-(:lx1)) (2*(last pos)-(:ly1)) :x2+(first pos) :y2+(last pos) :x+(first pos) :y+(last pos)
end


to absolute_quadratic_bezier :x1 :y1 :x :y
    ;quadratic bezier expressed as cubic bezier
    ;http://fontforge.github.io/bezier.html
    ;see also "Converting TrueType to PostScript"
	absolute_cubic_bezier (first pos)+(:x1-(first pos))*2/3 (last pos)+(:y1-(last pos))*2/3 :x+(:x1-:x)*2/3 :y+(:y1-:y)*2/3 :x :y
end


to relative_quadratic_bezier :x1 :y1 :x2 :y2 :x :y
    absolute_quadratic_bezier :x1+(first pos) :y1+(last pos) :x2+(first pos) :y2+(last pos) :x+(first pos) :y+(last pos)
end


to absolute_smooth_quadratic_bezier :x :y
    absolute_quadratic_bezier (2*(first pos)-(:lx1)) (2*(last pos)-(:ly1)) :x :y
end


to relative_smooth_quadratic_bezier :x :y
    absolute_quadratic_bezier (2*(first pos)-(:lx1)) (2*(last pos)-(:ly1)) :x+(first pos) :y+(last pos)
end


;see also http://www.w3.org/TR/SVG/implnote.html#ArcConversionEndpointToCenter
to absolute_arc :rx :ry :rt :fa :fs :x2 :y2

    ;auxiliar calcs
    make "rt (remainder (int :rt) 360)
    make "x1 (first pos)
    make "y1 (last pos)
    make "tx1 (cos :rt)*(:x1-:x2)/2+(sin :rt)*(:y1-:y2)/2
    make "ty1 -(sin :rt)*(:x1-:x2)/2+(cos :rt)*(:y1-:y2)/2
    
    
    ;Correction of out-of-range rx and ry
    make "rx (abs :rx)
    make "ry (abs :ry)
    make "d (sqrt (:tx1*:tx1/(:rx*:rx)+:ty1*:ty1/(:ry*:ry)))
    make "rx :d*:rx
    make "ry :d*:ry

    ;auxiliar calcs    
    make "sq (sqrt abs (((:rx*:rx*:ry*:ry-:rx*:rx*:ty1*:ty1-:ry*:ry*:tx1*:tx1)/(:rx*:rx*:ty1*:ty1+:ry*:ry*:tx1*:tx1))))
    if :fa=:fs [
        make "sq -:sq
    ]    
    make "tcx :sq*:rx*:ty1/:ry
    make "tcy :sq*-:ry*:tx1/:rx

    ;calculating coefficients
    make "cx (cos :rt)*:tcx-(sin :rt)*:tcy+(:x1+:x2)/2
    make "cy (sin :rt)*:tcx+(cos :rt)*:tcy+(:y1+:y2)/2
    make "o dot_product 1 0 (:tx1-:tcx)/:rx (:ty1-:tcy)/:ry
    make "do (remainder (int (dot_product (:tx1-:tcx)/:rx (:ty1-:tcy)/:ry (-:tx1-:tcx)/:rx (-:ty1-:tcy)/:ry)) 360)

    ;draw
    draw_arc :cx :cy :rx :ry :rt -:o -:do
end


to relative_arc :rx :ry :rt :fa :fs :x2 :y2 
    absolute_arc :rx :ry :rt :fa :fs (first pos)+:x2 (last pos)+:y2
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Draw                                                                  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

absolute_moveto 125.4903 -36.3834
relative_cubic_bezier -2.0259 0.4347 -4.0188 -0.8559 -4.4526 -2.8809
relative_lineto -2.7252 -12.7173
relative_cubic_bezier -8.6769 14.8023 -24.6027 24.0906 -42.0576 24.0906
relative_cubic_bezier -26.8809 -0.0 -48.75 -21.8688 -48.75 -48.75
relative_cubic_bezier 0.0 -2.0709 1.6788 -3.75 3.75 -3.75
relative_cubic_bezier 2.0709 -0.0 3.75 1.6791 3.75 3.75
relative_cubic_bezier 0.0 22.7454 18.5046 41.25 41.25 41.25
relative_cubic_bezier 14.8287 -0.0 28.3545 -7.9209 35.6775 -20.5329
relative_lineto -12.5019 2.6793
relative_cubic_bezier -2.0256 0.4341 -4.0188 -0.8562 -4.4523 -2.8812
relative_cubic_bezier -0.4341 -2.025 0.8559 -4.0188 2.8809 -4.4526
relative_lineto 21.4608 -4.599
relative_cubic_bezier 0.3645 -0.0783 0.735 -0.1008 1.0998 -0.0702
relative_cubic_bezier 0.6084 0.0513 1.2009 0.2508 1.7232 0.5886
relative_cubic_bezier 0.8352 0.5403 1.4214 1.3902 1.6296 2.3625
relative_lineto 4.5993 21.4608
absolute_cubic_bezier 128.8053 -38.8107 127.5153 -36.8175 125.4903 -36.3834
closepath
absolute_moveto 121.7169 -71.7258
relative_cubic_bezier -2.07 -0.0684 -3.6927 -1.8018 -3.6243 -3.8715
relative_cubic_bezier 0.3636 -11.0124 -3.5829 -21.507 -11.1126 -29.5512
relative_cubic_bezier -7.5297 -8.0439 -17.7411 -12.6744 -28.7532 -13.038
relative_cubic_bezier -0.4593 -0.015 -0.9156 -0.0225 -1.3728 -0.0225
relative_cubic_bezier -14.3688 0.0006 -27.6054 7.4628 -35.0808 19.5537
relative_lineto 13.0341 -3.495
relative_cubic_bezier 2.0004 -0.5361 4.0569 0.6504 4.5933 2.6511
relative_cubic_bezier 0.5364 2.0004 -0.6504 4.0566 -2.6508 4.5933
relative_lineto -21.1992 5.6841
relative_cubic_bezier -0.9606 0.2571 -1.9845 0.1227 -2.8455 -0.3741
relative_cubic_bezier -0.8616 -0.4971 -1.4901 -1.3161 -1.7478 -2.2767
relative_lineto -5.6838 -21.1992
relative_cubic_bezier -0.5364 -2.0004 0.6504 -4.0566 2.6508 -4.5933
relative_cubic_bezier 0.3255 -0.0873 0.6519 -0.129 0.9735 -0.129
relative_cubic_bezier 1.6554 -0.0 3.1707 1.1049 3.6198 2.7798
relative_lineto 3.1947 11.9151
relative_cubic_bezier 8.8872 -13.9944 24.3567 -22.6101 41.1396 -22.6095
relative_cubic_bezier 0.5391 -0.0 1.0809 0.0087 1.6224 0.0267
relative_cubic_bezier 13.0143 0.4299 25.0824 5.9019 33.9813 15.4086
relative_cubic_bezier 8.8986 9.5064 13.5627 21.9093 13.1328 34.9239
absolute_cubic_bezier 125.5203 -73.2801 123.786 -71.6523 121.7169 -71.7258
closepath
